{"version":3,"sources":["pages/battle/tab1/index.less","pages/battle/tab2/index.less","pages/battle/tab1/index.js","pages/battle/tab2/index.js","pages/battle/index.js"],"names":["module","exports","Tab1","props","setUser1","val","getUsers","setUser2","state","textConfig","name","icon","color","style","textAlign","display","justifyContent","this","map","item","margin","fontSize","className","padding","backgroundColor","title","styles","width","setData","PureComponent","InputItem","submit","e","imgs","Image","src","username","onload","setState","type","inputValue","onerror","alert","closeBox","checkUser","Yup","max","required","initialValues","onSubmit","validationSchema","stylesT","userInput","submitBtn","resultBox","alignItems","borderRadius","height","alt","marginLeft","lineHeight","onClick","closeBtn","Tab2","data","user","Promise","all","getUserData","then","res","length","public_repos","ranking_page","id","resolve","reject","fetch","json","container","avatar_url","location","followers","following","battleItem","listUl","marginRight","Math","random","Battle","typeChange","user1","user2"],"mappings":"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","file":"static/js/5.87a7779a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInput\":\"index_userInput__3YBRF\",\"submitBtn\":\"index_submitBtn__yrlh6\",\"resultBox\":\"index_resultBox__3Ly8y\",\"closeBtn\":\"index_closeBtn__32Jr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"index_container__LiYOR\",\"battleItem\":\"index_battleItem__1uGYG\",\"listUl\":\"index_listUl__fcNXT\"};","import React, { PureComponent } from 'react';\r\nimport stylesT from './index.less';\r\nimport { Form, Formik,Field,ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nexport default class Tab1 extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.textConfig = [\r\n            { name: 'Enter two Github:', icon: 'fa fa-users', color: 'rgb(255, 191, 116)' },\r\n            { name: 'Battle', icon: 'fa fa-fighter-jet', color: 'gray' },\r\n            { name: 'See the winner', icon: 'fa fa-trophy', color: '#f4ea2a' },\r\n        ];\r\n    }\r\n\r\n    setUser1 = (val) => {\r\n        this.props.getUsers('user1', val)\r\n    }\r\n\r\n    setUser2 = (val) => {\r\n        this.props.getUsers('user2', val)\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div>\r\n            <h2 style={{ textAlign: 'center' }}>Instructions</h2>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    this.textConfig.map(item => <div key={item.name} style={{ textAlign: 'center', margin: '0 40px' }}>\r\n                        <p style={{ fontSize: '20px' }}>{item.name}</p>\r\n                        <i className={item.icon} style={{ fontSize: '120px', color: item.color, padding: '30px', backgroundColor: '#eeeeee' }}></i>\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <h2 style={{ textAlign: 'center' }}>Players</h2>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <InputItem title=\"Player One\" styles={{ width: '50%' }} setData={this.setUser1} />\r\n                <InputItem title=\"Player Two\" styles={{ width: '50%' }} setData={this.setUser2} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nclass InputItem extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: '',\r\n            type: true\r\n        };\r\n    }\r\n    submit = (e) => {\r\n        let imgs = new Image();\r\n        imgs.src = `https://github.com/${e.username}.png?size=200`;\r\n        imgs.onload = () => {\r\n            this.setState({\r\n                type: false,\r\n                inputValue:e.username\r\n            }, () => {\r\n                this.props.setData(e.username);\r\n            });\r\n        }\r\n        imgs.onerror = () => {\r\n            alert('未获取到该用户信息，请重新输入');\r\n        }\r\n    }\r\n    closeBox = () => {\r\n        this.setState({\r\n            type: true,\r\n            inputValue: ''\r\n        }, () => {\r\n            this.props.setData(null);\r\n        });\r\n    }\r\n\r\n    checkUser = () => {\r\n        return Yup.object({\r\n            username:Yup.string()\r\n            .max(15, \"用户名的长度不能大于15\")\r\n            .required(\"请输入用户名\"),\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { title, styles } = this.props;\r\n        const { inputValue, type } = this.state;\r\n        return <div style={{ ...styles, padding: '10px' }}>\r\n            <h3>{title}</h3>\r\n            {\r\n                type ?\r\n                    <Formik\r\n                        initialValues={{username:''}}\r\n                        onSubmit={this.submit}\r\n                        validationSchema={this.checkUser()}\r\n                    >\r\n                        <Form style={{width: '100%'}}>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                <Field name=\"username\" className={stylesT.userInput} />\r\n                                <input type=\"submit\" className={stylesT.submitBtn} />\r\n                            </div>\r\n                            <ErrorMessage name=\"username\" />\r\n                        </Form>\r\n                    </Formik> :\r\n                    <div className={stylesT.resultBox}>\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                            <img src={\"https://github.com/\" + inputValue + \".png?size=200\"} style={{ borderRadius: '8px' }} width=\"80px\" height=\"80px\" alt=\"\" />\r\n                            <span style={{ fontSize: '30px', marginLeft: '10px' }}>{inputValue}</span>\r\n                        </div>\r\n                        <div style={{ lineHeight: '80px' }}>\r\n                            <button onClick={this.closeBox} className={stylesT.closeBtn}>×</button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </div>\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport styles from './index.less';\r\n\r\nexport default class Tab2 extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = this.props.user;\r\n        Promise.all([this.getUserData(user[0]), this.getUserData(user[1])]).then(res => {\r\n            if (res.length >= 2) {\r\n                if (res[0].public_repos > res[1].public_repos) {\r\n                    res[0].ranking_page = 'Winner';\r\n                    res[1].ranking_page = 'Loser';\r\n                } else if (res[0].public_repos < res[1].public_repos) {\r\n                    res[0].ranking_page = 'Loser';\r\n                    res[1].ranking_page = 'Winner';\r\n                } else {\r\n                    res[0].ranking_page = 'it ends in a draw';\r\n                    res[1].ranking_page = 'it ends in a draw';\r\n                }\r\n                this.setState({\r\n                    data: res\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    getUserData(id) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch('https://api.github.com/users/' + id).then(res => res.json()).then(res => {\r\n                resolve(res);\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        return <div className={styles.container}>\r\n            {\r\n                data ? data.map(({ ranking_page, avatar_url, public_repos, name, location, followers, following }) => <div key={name + Math.random()} className={styles.battleItem}>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <h3>{ranking_page}</h3>\r\n                        <img src={avatar_url} alt=\"\" width=\"200px\" height=\"200px\" />\r\n                        <h4>Scores:{public_repos}</h4>\r\n                        <h2>{name}</h2>\r\n                    </div>\r\n                    <div>\r\n                        <ul className={styles.listUl}>\r\n                            {\r\n                                [\r\n                                    { icon: 'fa fa-location-arrow', data: location },\r\n                                    { icon: 'fa fa-group', data: followers },\r\n                                    { icon: 'fa fa-user-plus', data: following },\r\n                                    { icon: 'fa fa-code', data: public_repos },\r\n                                ].map(item => <li key={item.icon}><i style={{ width: '16px', textAlign: 'center', marginRight: '4px' }} className={item.icon}></i>{item.data}</li>)\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>) : <span><i className=\"fa fa-spin fa-spinner\" />loading...</span>\r\n            }\r\n        </div>\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport Tab1 from '@/pages/battle/tab1';\r\nimport Tab2 from '@/pages/battle/tab2';\r\n\r\nexport default class Battle extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user1: null,\r\n            user2: null,\r\n            type: true\r\n        };\r\n    }\r\n\r\n    getUsers = (type, val) => {\r\n        this.setState({\r\n            [type]: val\r\n        })\r\n    }\r\n\r\n    typeChange = () => {\r\n        if (!this.state.type) {\r\n            this.setState({\r\n                user1: null,\r\n                user2: null\r\n            })\r\n        }\r\n        this.setState({\r\n            type: !this.state.type\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user1, user2, type } = this.state;\r\n        return (\r\n            <div style={{ padding: '20px' }}>\r\n                {\r\n                    type ? <Tab1 getUsers={this.getUsers} /> : <Tab2 user={[user1, user2]} />\r\n                }\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {\r\n                        user1 && user2 ? <button onClick={this.typeChange} style={{ padding: '16px 32px',fontSize:'20px' }}>{type ? 'Battle' : 'RESET'}</button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"],"sourceRoot":""}