{"version":3,"sources":["services/app.js","models/app.js","util/tool.js","app.js","index.js"],"names":["getCartDatas","fetch","then","res","json","model","namespace","state","cartData","originalData","order","filters","inCartDatas","effects","fetchCartDataAsync","payload","call","put","JSON","parse","localStorage","getItem","type","products","fetchModifyData","fetchAddCart","reducers","setData","action","modifyData","data","stringify","length","filter","item","arr1","arr2","newArr","i","j","push","getArrEqual","availableSizes","sort","a","b","price","addCart","id","count","setItem","reduceCart","removeCart","App","app","locale","zhCN","exact","from","to","path","component","dynamic","models","dva","history","createHashHistory","router","start"],"mappings":"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","file":"static/js/main.80630313.chunk.js","sourcesContent":["export function getCartDatas(){\r\n    return fetch('https://react-shopping-cart-67954.firebaseio.com/products.json').then(res => res.json())\r\n}","import { getCartDatas } from '../services/app.js';\r\nimport { getArrEqual } from '../util/tool.js';\r\n\r\nconst model = {\r\n\r\n    namespace: 'app',\r\n\r\n    state: {\r\n        cartData: null,\r\n        originalData: null,\r\n        order: null,\r\n        filters: null,\r\n        inCartDatas: []\r\n    },\r\n\r\n    effects: {\r\n        *fetchCartDataAsync({ payload }, { call, put }) {\r\n            const res = yield call(getCartDatas);\r\n            let inCartDatas = JSON.parse(localStorage.getItem('cartData')) || [];\r\n            yield put({\r\n                type: 'setData', payload: {\r\n                    cartData: res.products,\r\n                    originalData: res.products,\r\n                    inCartDatas\r\n                }\r\n            });\r\n        },\r\n        *fetchModifyData({ payload }, { call, put }) {\r\n            yield put({\r\n                type: 'modifyData',\r\n                payload\r\n            })\r\n        },\r\n        *fetchAddCart({ payload }, { call, put }) {\r\n            switch (payload.type) {\r\n                case 'add':\r\n                    yield put({\r\n                        type: 'addCart',\r\n                        payload\r\n                    })\r\n                    break;\r\n                case 'reduce':\r\n                    yield put({\r\n                        type: 'reduceCart',\r\n                        payload\r\n                    })\r\n                    break;\r\n                case 'remove':\r\n                    yield put({\r\n                        type: 'removeCart',\r\n                        payload\r\n                    })\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    reducers: {\r\n        setData(state, action) {\r\n            return { ...state, ...action.payload };\r\n        },\r\n        modifyData(state, action) {\r\n            // 商品原始数据\r\n            let data = JSON.parse(JSON.stringify(state.originalData));\r\n            // 商品筛选、排序条件\r\n            let filters = action.payload.filters || state.filters;\r\n            let order = action.payload.order || state.order;\r\n            if (filters?.length > 0) {\r\n                data = data.filter(item => getArrEqual(item.availableSizes, filters).length > 0);\r\n            }\r\n            switch (order) {\r\n                case \"lowestprice\":\r\n                    data.sort((a, b) => a.price - b.price)\r\n                    break;\r\n                case \"highestprice\":\r\n                    data.sort((a, b) => b.price - a.price)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return { ...state, cartData: data, ...action.payload };\r\n        },\r\n        addCart(state, action) {\r\n            let data = JSON.parse(JSON.stringify(state.inCartDatas));\r\n            let item = data.filter(item => action.payload.id === item.id)[0];\r\n            if (item) {\r\n                item.count += 1\r\n            } else {\r\n                data.push({\r\n                    id: action.payload.id,\r\n                    count: 1\r\n                });\r\n            }\r\n            localStorage.setItem('cartData',JSON.stringify(data));\r\n            return { ...state, inCartDatas: data };\r\n        },\r\n        reduceCart(state, action) {\r\n            let data = JSON.parse(JSON.stringify(state.inCartDatas));\r\n            let item = data.filter(item => action.payload.id === item.id)[0];\r\n            if (item) {\r\n                item.count -= 1\r\n            }\r\n            localStorage.setItem('cartData',JSON.stringify(data));\r\n            return { ...state, inCartDatas: data };\r\n        },\r\n        removeCart(state, action) {\r\n            let data = JSON.parse(JSON.stringify(state.inCartDatas));\r\n            data = data.filter(item => action.payload.id !== item.id);\r\n            localStorage.setItem('cartData',JSON.stringify(data));\r\n            return { ...state, inCartDatas: data };\r\n        }\r\n    },\r\n\r\n};\r\n\r\nexport default model","/**\r\n * \r\n * @param {*} arr1 \r\n * @param {*} arr2 \r\n * @returns 两个数组相同的元素\r\n */\r\nexport function getArrEqual(arr1, arr2) {\r\n    let newArr = [];\r\n    for (let i = 0; i < arr2.length; i++) {\r\n        for (let j = 0; j < arr1.length; j++) {\r\n            if (arr1[j] === arr2[i]) {\r\n                newArr.push(arr1[j]);\r\n            }\r\n        }\r\n    }\r\n    return newArr;\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport dynamic from 'dva/dynamic';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport 'antd/dist/antd.less';\r\n\r\nexport default function App({ app }) {\r\n    return (\r\n        <ConfigProvider locale={zhCN}>\r\n            <Router>\r\n                <Switch>\r\n                    <Redirect exact from=\"/\" to=\"/home\" />\r\n                    <Route exact path=\"/home\" component={dynamic({\r\n                        app,\r\n                        models: () => [],\r\n                        component: () => import('./pages/home/index.jsx')\r\n                    })}></Route>\r\n                </Switch>\r\n            </Router>\r\n        </ConfigProvider>\r\n    )\r\n}\r\n","import dva from 'dva';\nimport model from './models/app.js';\nimport App from './app.js';\nimport { createHashHistory } from 'history';\n\nconst app = dva({\n    history:createHashHistory\n});\n\napp.model(model);\n\napp.router(()=><App />);\n\napp.start('#root');\n"],"sourceRoot":""}